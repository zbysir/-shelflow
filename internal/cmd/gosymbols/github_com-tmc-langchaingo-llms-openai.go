// Code generated by 'yaegi extract github.com/tmc/langchaingo/llms/openai'. DO NOT EDIT.

package langchaingo

import (
	"github.com/tmc/langchaingo/llms/openai"
	"reflect"
)

func init() {
	Symbols["github.com/tmc/langchaingo/llms/openai/openai"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ErrEmptyResponse":            reflect.ValueOf(&openai.ErrEmptyResponse).Elem(),
		"ErrMissingToken":             reflect.ValueOf(&openai.ErrMissingToken).Elem(),
		"ErrUnexpectedResponseLength": reflect.ValueOf(&openai.ErrUnexpectedResponseLength).Elem(),
		"New":                         reflect.ValueOf(openai.New),
		"WithModel":                   reflect.ValueOf(openai.WithModel),
		"WithToken":                   reflect.ValueOf(openai.WithToken),

		// type definitions
		"ChatMessage": reflect.ValueOf((*openai.ChatMessage)(nil)),
		"LLM":         reflect.ValueOf((*openai.LLM)(nil)),
		"Option":      reflect.ValueOf((*openai.Option)(nil)),
	}
}
