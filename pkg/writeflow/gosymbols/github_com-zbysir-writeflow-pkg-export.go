// Code generated by 'yaegi extract github.com/zbysir/writeflow/pkg/export'. DO NOT EDIT.

package gosymbols

import (
	"context"
	"github.com/zbysir/writeflow/pkg/export"
	"reflect"
)

func init() {
	Symbols["github.com/zbysir/writeflow/pkg/export/export"] = map[string]reflect.Value{
		// type definitions
		"CMDer":            reflect.ValueOf((*export.CMDer)(nil)),
		"Category":         reflect.ValueOf((*export.Category)(nil)),
		"Component":        reflect.ValueOf((*export.Component)(nil)),
		"ComponentData":    reflect.ValueOf((*export.ComponentData)(nil)),
		"ComponentSource":  reflect.ValueOf((*export.ComponentSource)(nil)),
		"Locales":          reflect.ValueOf((*export.Locales)(nil)),
		"NodeAnchorTarget": reflect.ValueOf((*export.NodeAnchorTarget)(nil)),
		"NodeInputParam":   reflect.ValueOf((*export.NodeInputParam)(nil)),
		"NodeOutputAnchor": reflect.ValueOf((*export.NodeOutputAnchor)(nil)),
		"Plugin":           reflect.ValueOf((*export.Plugin)(nil)),
		"PluginInfo":       reflect.ValueOf((*export.PluginInfo)(nil)),
		"Reader":           reflect.ValueOf((*export.Reader)(nil)),
		"Register":         reflect.ValueOf((*export.Register)(nil)),
		"Stream":           reflect.ValueOf((*export.Stream)(nil)),

		// interface wrapper definitions
		"_CMDer":    reflect.ValueOf((*_github_com_zbysir_writeflow_pkg_export_CMDer)(nil)),
		"_Plugin":   reflect.ValueOf((*_github_com_zbysir_writeflow_pkg_export_Plugin)(nil)),
		"_Reader":   reflect.ValueOf((*_github_com_zbysir_writeflow_pkg_export_Reader)(nil)),
		"_Register": reflect.ValueOf((*_github_com_zbysir_writeflow_pkg_export_Register)(nil)),
		"_Stream":   reflect.ValueOf((*_github_com_zbysir_writeflow_pkg_export_Stream)(nil)),
	}
}

// _github_com_zbysir_writeflow_pkg_export_CMDer is an interface wrapper for CMDer type
type _github_com_zbysir_writeflow_pkg_export_CMDer struct {
	IValue interface{}
	WExec  func(ctx context.Context, params map[string]interface{}) (rsp map[string]interface{}, err error)
}

func (W _github_com_zbysir_writeflow_pkg_export_CMDer) Exec(ctx context.Context, params map[string]interface{}) (rsp map[string]interface{}, err error) {
	return W.WExec(ctx, params)
}

// _github_com_zbysir_writeflow_pkg_export_Plugin is an interface wrapper for Plugin type
type _github_com_zbysir_writeflow_pkg_export_Plugin struct {
	IValue      interface{}
	WCategories func() []export.Category
	WCmd        func() map[string]export.CMDer
	WComponents func() []export.Component
	WInfo       func() export.PluginInfo
}

func (W _github_com_zbysir_writeflow_pkg_export_Plugin) Categories() []export.Category {
	return W.WCategories()
}
func (W _github_com_zbysir_writeflow_pkg_export_Plugin) Cmd() map[string]export.CMDer {
	return W.WCmd()
}
func (W _github_com_zbysir_writeflow_pkg_export_Plugin) Components() []export.Component {
	return W.WComponents()
}
func (W _github_com_zbysir_writeflow_pkg_export_Plugin) Info() export.PluginInfo {
	return W.WInfo()
}

// _github_com_zbysir_writeflow_pkg_export_Reader is an interface wrapper for Reader type
type _github_com_zbysir_writeflow_pkg_export_Reader struct {
	IValue   interface{}
	WRead    func() (string, error)
	WReadAll func() ([]string, error)
}

func (W _github_com_zbysir_writeflow_pkg_export_Reader) Read() (string, error) {
	return W.WRead()
}
func (W _github_com_zbysir_writeflow_pkg_export_Reader) ReadAll() ([]string, error) {
	return W.WReadAll()
}

// _github_com_zbysir_writeflow_pkg_export_Register is an interface wrapper for Register type
type _github_com_zbysir_writeflow_pkg_export_Register struct {
	IValue          interface{}
	WRegisterPlugin func(m export.Plugin)
}

func (W _github_com_zbysir_writeflow_pkg_export_Register) RegisterPlugin(m export.Plugin) {
	W.WRegisterPlugin(m)
}

// _github_com_zbysir_writeflow_pkg_export_Stream is an interface wrapper for Stream type
type _github_com_zbysir_writeflow_pkg_export_Stream struct {
	IValue     interface{}
	WNewReader func() export.Reader
}

func (W _github_com_zbysir_writeflow_pkg_export_Stream) NewReader() export.Reader {
	return W.WNewReader()
}
